<?php

namespace AdministracionBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Symfony\Component\HttpFoundation\Request;

/**
 * MovimientoCuentaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MovimientoCuentaRepository extends EntityRepository
{
    public function findMovimentosByUsuario($idUsuario, $page = 0, $itemPerPage = 10) {
		$em = $this->getEntityManager();
        $response = $em
            ->createQuery("
                SELECT 
                    mc.id,
                    mc.referencia,
                    mc.fecha,
                    mc.monto,
                    mc.tipo,
                    mc.ref_externa,
                    cmc.nombre as concepto
                FROM AdministracionBundle:MovimientoCuenta mc
                JOIN mc.concepto_movimiento_cuentaid cmc
                WHERE mc.usuarioid = :idUsuario
                ORDER BY mc.fecha DESC
            ")
            ->setMaxResults($itemPerPage)
            ->setFirstResult($page * $itemPerPage)
            ->setParameter('idUsuario', $idUsuario)
            ->getResult();

		return $response;
	}
        
    public function findByMovimientoCuenta(Request $request)
    {
        $start=$request->request->get('start');
        $offset=$request->request->get('length');
        
        $dql = $this->findByMovimientoCuentaTotal($request);
        $dql->setMaxResults($offset);
        $dql->setFirstResult($start);
        
        return $dql;
    }
    
    public function findByMovimientoCuentaTotal(Request $request)
    {
        $em=$this->getEntityManager();

        $where="";
        $having="";
        $orderBy="";

        $flag=false;

        $whereParameters=array();

        $columnas=array(
            0=>"referencia",
            1=>"fecha",
            2=>"monto",
            3=>"tipo",
            4=>"concepto"
        );

        $idUsuario = $request->request->get('idUsuario');
        $valorSearch=$request->request->get('searchByText');
//        $searchByFromDate = $request->request->get('searchByFromdate');
//        $searchByToDate = $request->request->get('searchByTodate');

        /** @var \DateTime $searchByFromDate */
//        $searchByFromDate = $searchByFromDate? \DateTime::createFromFormat('d/m/Y', $searchByFromDate): null;
//        $searchByFromDate = $searchByFromDate? $searchByFromDate->setTime(0, 0): null;
//        
//        /** @var \DateTime $searchByToDate */
//        $searchByToDate = $searchByToDate? \DateTime::createFromFormat('d/m/Y', $searchByToDate): null;
//        $searchByToDate = $searchByToDate? $searchByToDate->setTime(23, 59): null;
        
        if($idUsuario || $valorSearch/* || $searchByFromDate || $searchByToDate*/)
        {
            $where="where";
            $andQuery = false;
            
            if($valorSearch) {
                $where=$where." (movimientoCuenta.referencia like :referencia or movimientoCuenta.concepto like :concepto ";
                $whereParameters=[
                    'referencia'=>'%'.$valorSearch.'%',
                    'concepto'=>'%'.$valorSearch.'%'];
                
                $andQuery = true;
            }
            
            if($idUsuario) {
                $andQuery? $where.= ' and': null;
                $where=$where." movimientoCuenta.usuarioid = :usuarioid";
                $whereParameters['usuarioid'] = $idUsuario;
                $andQuery = true;
            }
        }
        
        $columnaOrder=$columnas[$request->request->get("order")[0]["column"]];
        $sentidoOrder=$request->request->get("order")[0]["dir"];

        if ($columnaOrder == "referencia") {
            $orderBy = "ORDER BY movimientoCuenta.referencia ".$sentidoOrder;
        }
        if ($columnaOrder == "fecha") {
            $orderBy = "ORDER BY movimientoCuenta.fecha ".$sentidoOrder;
        }
        if ($columnaOrder == "monto") {
            $orderBy = "ORDER BY movimientoCuenta.monto ".$sentidoOrder;
        }
        if ($columnaOrder == "tipo") {
            $orderBy = "ORDER BY movimientoCuenta.tipo ".$sentidoOrder;
        }
        if ($columnaOrder == "concepto") {
            $orderBy = "ORDER BY movimientoCuenta.concepto ".$sentidoOrder;
        }

        $sql="select 

                  movimientoCuenta
                  
              from 
              
              AdministracionBundle:MovimientoCuenta movimientoCuenta
              JOIN movimientoCuenta.usuarioid usuario
             
              ".$where."  ".$orderBy;

        $dql=$em->createQuery($sql);

        $dql->setParameters($whereParameters);

        return $dql;
    }
}
